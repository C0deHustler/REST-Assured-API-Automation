package tests;

import static io.restassured.RestAssured.*;

import org.json.simple.JSONObject;
import org.testng.annotations.Test;

import io.restassured.http.ContentType;

public class TestsOnLocalAPI {

	// STEP 1️: GET all users from local server to check the initial state of the database.
	// This is useful for verifying existing records before making any changes.
	// Run this first to observe data before POST or other operations.
	
	// @Test
	public void get() {
		baseURI = "http://localhost:3000";
		given().get("/users").then().statusCode(200).log().all();
	}

	// STEP 2️: POST a new user to the "users" resource.
	// We're adding Shahrukh Khan with subjectId = 1 (Automation).
	// After this, a new user should appear in GET response.
	// Note: The ID will be auto-generated by JSON Server.
	
	// @Test
	public void post() {
		JSONObject request = new JSONObject();
		request.put("firstName", "Shahrukh");
		request.put("lastName", "Khan");
		request.put("subjectId", "1");

		baseURI = "http://localhost:3000";
		given().contentType(ContentType.JSON).accept(ContentType.JSON).body(request.toJSONString()).when()
				.post("/users").then().statusCode(201);
	}
	
	// STEP 3️: PUT request to completely update the user added in the previous POST.
	// We're assuming the new user had ID = 5731 (check actual ID if different).
	// This will replace all fields with new values.
	
	// @Test
	public void put() {
		JSONObject request = new JSONObject();
		request.put("firstName", "Saif Ali");
		request.put("lastName", "Khan");
		request.put("subjectId", "2");

		baseURI = "http://localhost:3000";
		given().contentType(ContentType.JSON).accept(ContentType.JSON).body(request.toJSONString()).when()
				.put("/users/5731").then().statusCode(200);
	}

	// STEP 4️: PATCH request to partially update the same user (with ID = 5731).
	// This will only update the `firstName` field to "Salman", leaving others unchanged.
	
	// @Test
	public void patch() {
		JSONObject request = new JSONObject();
		request.put("firstName", "Salman");

		baseURI = "http://localhost:3000";
		given().contentType(ContentType.JSON).accept(ContentType.JSON).body(request.toJSONString()).when()
				.patch("/users/5731").then().statusCode(200);
	}
	
	// STEP 5️: DELETE the user with ID = 5731 from the database.
	// This will permanently remove the user that we created and modified earlier.
	// ✅ Run this last in sequence.
	
	@Test
	public void delete() {
		baseURI = "http://localhost:3000";
		when().delete("/users/5731").then().statusCode(200);
	}
}
